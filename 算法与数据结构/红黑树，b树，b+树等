 ---
 title: 红黑树，b树，b+树等
 date: 2020-04-14 14:31:35
 tags:
 categories: 算法与数据结构
 ---
 1: 平衡二叉树  
 树高差只有1的二叉树，插入删除导致不满足平衡的时候就会触发旋转，所以不适用插入删除非常频繁的场景
 
 2: 红黑树  
 近似平衡的二叉树，通过对任何一条从根到叶子的简单路径上各个节点的颜色进行约束，确保没有一条路径会比其他路径长2倍，  
 因而是近似平衡的。所以相对于严格要求平衡的AVL树来说，它的旋转保持平衡次数较少。  
 所以对于增删频次比较高的情况下红黑树表现比二叉树好。查找复杂度log2n
 （现在部分场景使用跳表来替换红黑树）
 (跳表就是多层链表，底层数据，其余层做索引，查找，时间复杂度logn，空间复杂度2n)
 
 3: b(+树)  
 多路查找树，b+树的区别在于b+树的数据都是保存在叶子节点的，查找时间复杂度logn